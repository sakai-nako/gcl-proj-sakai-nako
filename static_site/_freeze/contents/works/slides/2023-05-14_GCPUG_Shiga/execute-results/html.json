{
  "hash": "f47e3789a0dff0a2ad35ea9d39511f99",
  "result": {
    "markdown": "---\ntitle: \"君にもできる！<br/>AutoML Tables\"\ndate: 2023-05-14\nauthor: \"フェンリル株式会社<br/>太田 有人\"\ndate-format: \"YYYY年 M月 D日\"\nevent_link: \"[GCPUG in Shiga #3 「はじめてのAutoML・BigQuery」](https://gcpug-shiga.connpass.com/event/276076/)\"\nstructure: \"[下書き](./slides/structures/2023-05-14_GCPUG_Shiga.qmd)\"\nevent_name: \"GCPUG in Shiga #3 「はじめてのAutoML・BigQuery」\"\nformat:\n  revealjs:\n    theme: simple\n    slide-level: 2\n    template-partials:\n      - _custom_templates/title-slide.html\n    # logo:\n    # footer: \"フッターテキスト<br/>改行もできる\"\n    menu: false\n    slide-number: c/t\n    show-slide-number: speaker\n    # show-slide-number: print\n    # show-notes: true\n    # show-notes: separate-page\n    # pdf-separate-fragments: true\n    preview-links: false\n    # slide-tone: true\n    progress: false\n    history: false\n    hash-type: number\n    # chalkboard:\n    #   buttons: false\n    #   src: <file>\n    # transition: convex\n    # transition-speed: default\n    # navigation-mode: vertical\n    # controls-layout: bottom-right\n    # controls-back-arrows: visible\n    # controls-tutorial: true\n    css: _custom_scss/style.scss\n#   pptx:\n#     slide-level: 2\n    \n---\n\n\n\n# はじめに\n\n## 自己紹介 {.smaller}\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n<img src=\"_images/profile_b_org_01.png\" />\n<img src=\"https://api.accredible.com/v1/frontend/credential_website_embed_image/badge/62647313\" />\n<img src=\"https://api.accredible.com/v1/frontend/credential_website_embed_image/badge/70175632\" />\n\n:::\n\n::: {.column width=\"60%\"}\n- 名前 : 太田 有人\n- 所属 : フェンリル株式会社 クラウド事業推進部\n- 出身 : 1987/7/1 に京都で生まれる\n- コンビニバイト10年の後にIT業界に飛び込む（現在7年目）\n- システムエンジニア（2017～2021）<br>↓<br>クラウドエンジニア（2022～現在）\n- [LinkedIn](https://www.linkedin.com/in/ba4585199)\n- [Twitter (別名で活動中)](https://twitter.com/nazonoobasan407)\n:::\n\n::::\n\n::: {.notes}\nまずは、私について軽く自己紹介させてください。\n\n【ToDo】自己紹介ノート\n\n**ここまでで 00:01:00**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## ご注意とお詫び\n\n![](_images/automl_tables_deprecated.png)\n\n::: {.fragment}\nAutoML Tables は非推奨となりました……\n:::\n\n::: {.fragment}\n<br/>\n　　**→Vertex AI / 表形式のデータ / AutoML**  \n　　　の組み合わせで行きます！\n:::\n\n::: {.notes}\n\n【ToDo】 ご注意とお詫びノート\n\n- AutoML Tables は非推奨となり、2024 年 1 月 23 日以降は Google Cloud で使用できなくなります。\n- 本発表内容は Vertex AI / 表形式のデータ / AutoML を使うことを前提として構成しています\n\n**ここまでで 00:01:30**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## 本発表で話すこと・話さないこと\n\n<br/>\n\n::: {.fragment}\n### 話すこと\n- Vertex AI / 表形式のデータ / AutoML でできること\n- どこの部分が \"Auto\" な ML なのか\n:::\n::: {.fragment}\n### 話さないこと\n\n- 具体的なユースケース・事例\n- 詳細な作業手順\n:::\n\n::: {.notes}\n\n【ToDo】話すこと・話さないことノート\n\n**ここまでで 00:02:00**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n# ところで……\n\n::: {.notes}\n\n【ToDo】ところでノート\n\n**ここまでで 00:02:05**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## 最近は、魔法使いの修行が流行っている？\n\n::: {.incremental}\n- ChatGPT(AI) に呪文をかけて、望みの文章を生み出す\n- Stable Diffusion(AI) に呪文をかけて、望みの画像を生み出す\n- MusicLM(AI) に呪文をかけて、望みの音楽を生み出す\n:::\n::: {.fragment}\n**よりよい呪文を作ったり、よりよい AI と呪文の組み合わせの研究に励む人々がたくさん！**\n:::\n\n::: {.notes}\n\n【ToDo】ノート\n\n**ここまでで 00:02:35**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## 「呪文」をかける対象の AI を育てる\n\n::: {.incremental}\n- まずは呪文をかける対象の AI を育てる必要がある\n- データをたくさん AI に与えることで、成長させる\n  - これが世にいう「機械学習」と呼ばれるプロセス\n- 成長した AI に呪文をかけて、望みの結果を生み出す\n:::\n\n::: {.fragment}\n**望みのものを生み出すために、AIの育成に励む人々もたくさん！**\n:::\n\n::: {.notes}\n\n（内容）\n\n機械学習 : Machine Learning (ML)\n\nAIを育てて、育てたAIに呪文をかけるというところ、何だか分かりにくいかもしれませんね。  \nここで一つ、お遊びを挟んでみたいと思います。\n\n**ここまでで 00:03:05**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## コーヒー、ココア、ピザ、ひじ\n\n::: {.r-stack}\n![](_images/coffee_cocoa_01.png){.fragment .fade-in-then-out}\n\n![](_images/coffee_cocoa_02.png){.fragment .fade-in-then-out}\n\n![](_images/coffee_cocoa_03.png){.fragment }\n:::\n\n::: {.notes}\n\n- コーヒーと言ったらココアと言って、ココアと言ったらコーヒーと言うゲーム\n- ピザと10回言って、「じゃあココア」と肘を指すゲーム\n\n「ひじ」って言ってくれたら、「引っかかった〜、ココアって言ったらコーヒーって言うんやで」というオチのお遊びですね。  \n出題者としては、「ココアと言ったら\"ひじ\"って言ってもらって、笑いを取りたい」というような意図があるかと思います。\n\nこの意図があるので、  \n「コーヒーと言ったらココアと言い、ココアと言ったらコーヒーという」  \n「\"ピザ\"と10回言う」  \nという言葉と行動を回答者に与えて、\"学習\"をしてもらったんですね。\n\n図にすると、こんな感じです。\n\n【ToDo】ノート\n\nこれを、さっきの「呪文」とAIのお話に当てはめてみると……\n\n**ここまでで 00:07:05**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## データ、学習、呪文\n\n::: {.r-stack}\n![](_images/data_learn_jyumon_01.png){.fragment .fade-in-then-out}\n\n![](_images/data_learn_jyumon_02.png){.fragment .fade-in-then-out}\n\n![](_images/data_learn_jyumon_03.png){.fragment }\n:::\n\n::: {.notes}\n\n【ToDo】ノート\n\nAI は、データをたくさん与えられることで、\"学習\"して、成長します。  \nAI に与えられるデータは、「コーヒー」とかの言葉の他にもたくさんの形式があります。\n\n最初にチラッと出てきた「表形式のデータ」もその一つです。  \nということで……\n\n**ここまでで 00:08:05**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n# Vertex AI<br/>表形式のデータ<br/>AutoML<br/><br/>で何ができる？\n\n::: {.notes}\n\nVertex AI / 表形式のデータ / AutoML で何ができるのか、見ていきたいと思います。\n\n**ここまでで 00:08:15**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## Vertex AI / 表形式のデータ / AutoML でできること\n\n::: {.incremental}\n- AI に与えるデータを管理できる\n- AI に与えるデータを指定すれば、自動で AI を育ててくれる\n  - ここが \"Auto\" ML\n- AI の成長状態を記録・管理できる\n- 育てた AI に呪文をかけて、データを出力させる\n:::\n\n::: {.notes}\n\n【ToDo】ノート\n\n- AI に与えるデータ自体を管理できる (Datasets)\n- AI に与えるデータを指定すれば、自動で AI を育ててくれる (AutoML)\n- AI の成長状態を記録・管理できる (Model Registry)\n- 育てた AI に呪文をかけて、データを出力させる (Online/Batch prediction)\n  - 表形式データの場合は、予測値（単体値・連続値）もしくは分類の予測結果を生み出す\n\n**ここまでで 00:08:45**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## AI に与えるデータを管理できる\n\n:::: {.r-stack}\n\n::: {.fragment .fade-in-then-out}  \n![](_images/learning_data_management.png)\n:::\n\n::: {.fragment .fade-in-then-out}\n**データセットの作成**  \n![](_images/dataset_create.png){height=\"500\"}\n:::\n\n::: {.fragment .fade-in-then-out}\n**CSVファイルのアップロードもOK**  \n![](_images/dataset_source.png){height=\"500\"}\n:::\n\n::: {.fragment .fade-in-then-out}\n**データセットの一覧表示**  \n![](_images/dataset_list.png){height=\"500\"}\n:::\n\n::::\n\n::: {.notes}\n\n【ToDo】ノート\n\n- AI に与えるデータは、データセットという単位で管理する\n\n**ここまでで 00:09:45**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## 自動で AI を育ててくれる (AutoML)\n\n:::: {.r-stack}\n\n::: {.fragment .fade-in-then-out}\n![](_images/auto_ml_01.png)\n:::\n\n::: {.fragment .fade-in-then-out}\n**目的とデータを指定**  \n![](_images/auto_ml_02.png){height=\"500\"}\n:::\n\n::: {.fragment .fade-in-then-out}\n**AI の名前と、目的の詳細を指定**  \n![](_images/auto_ml_03.png){height=\"500\"}\n:::\n\n::: {.fragment .fade-in-then-out}\n**学習に使う時間の上限を設定**  \n![](_images/auto_ml_04.png){height=\"500\"}\n:::\n\n::::\n\n::: {.notes}\n\n【ToDo】ノート\n\n**ここまでで 00:10:45**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## AI の成長状態を記録・管理できる\n\n:::: {.r-stack}\n\n::: {.fragment .fade-in-then-out}\n![](_images/ai_model_management_01.png)\n:::\n\n::: {.fragment .fade-in-then-out}\n**AIモデルの一覧表示**  \n![](_images/ai_model_management_02.png){height=\"500\"}\n:::\n\n::: {.fragment .fade-in-then-out}\n**AIバージョンの一覧表示**  \n![](_images/ai_model_management_03.png){height=\"500\"}\n:::\n\n::::\n\n::: {.notes}\n\n【ToDo】ノート\n\n- AI はモデルという単位で管理する\n- AI の成長状態は、バージョンとして管理する\n\n**ここまでで 00:11:30**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## 育てた AI に呪文をかけてデータ出力\n\n:::: {.r-stack}\n\n::: {.fragment .fade-in-then-out}\n![](_images/prediction_01.png)\n:::\n\n::: {.fragment .fade-in-then-out}\n**AIが動く場所 (エンドポイント) を確保する**  \n![](_images/prediction_02.png){height=\"500\"}\n:::\n\n::: {.fragment .fade-in-then-out}\n**AIに呪文をかける**  \n![](_images/prediction_03.png){height=\"500\"}\n:::\n\n::: {.fragment .fade-in-then-out}\n**AIがデータを出力**  \n![](_images/prediction_04.png){height=\"500\"}\n:::\n\n::::\n\n::: {.notes}\n\n【ToDo】ノート\n\n- AI に、データという名の呪文をかける\n  - （REST API のリクエストボディに呪文を仕込んで呼び出し）\n\n**ここまでで 00:12:30**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## Vertex AI / 表形式のデータ / AutoML でできること (再掲)\n\n- AI に与えるデータを管理できる\n- AI に与えるデータを指定すれば、自動で AI を育ててくれる\n  - ここが \"Auto\" ML\n- AI の成長状態を記録・管理できる\n- 育てた AI に呪文をかけて、データを出力させる\n\n::: {.notes}\n\n以上、Vertex AI / 表形式のデータ / AutoML でできることについて、簡単に見てきました。  \nどこの部分が \"Auto\" な \"ML\" なのかということも、分かったかと思います。\n\n最後に、料金についても軽く触れておきたいと思います。\n\n**ここまでで 00:13:00**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n## 大体いくらぐらいかかるものなの？\n\n::: {.incremental}\n- AI にデータを与えて学習させる\n  - 1時間で 2900円くらい ($21.252)\n- AI に呪文をかけてデータを出力させる\n    - AI が動く場所 (エンドポイント) の料金がかかる\n    - 東京リージョンで、一番安いスペックのマシンの場合\n      - 1時間で 20円くらい ($0.1402)\n- 参考 : [Vertex AutoML モデル 料金](https://cloud.google.com/vertex-ai/pricing?hl=ja#automl_models)\n:::\n\n::: {.notes}\n\n【ToDo】ノート\n\n**ここまでで 00:14:00**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n# Vertex AI<br/>表形式のデータ<br/>AutoML<br/><br/>の組み合わせなら……\n\n::: {.notes}\n\n【ToDo】ノート\n\n**ここまでで 00:14:05**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n# スプレッドシート<br/>エクセルのデータ<br/><br/>でも始められます！\n\n::: {.notes}\n\n【ToDo】ノート\n\n**ここまでで 00:14:10**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n# 仲間、[募集中](https://recruit.fenrir-inc.com/)です！！\n\n::: {.notes}\n\n【ToDo】ノート\n\n**ここまでで 00:14:20**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n# おしまい\n\n::: {.notes}\n\n【ToDo】ノート\n\n**ここまでで 00:14:30**\n\n\n:::\n\n<!-- --------------------------------------------------------------------- -->\n<!-- --------------------------------------------------------------------- -->\n\n",
    "supporting": [
      "2023-05-14_GCPUG_Shiga_files"
    ],
    "filters": [],
    "includes": {}
  }
}