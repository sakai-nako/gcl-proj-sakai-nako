---
title: "君にもできる！<br/>AutoML Tables"
date: 2023-05-14
author: "フェンリル株式会社<br/>太田 有人"
date-format: "YYYY年 M月 D日"
event_link: "[GCPUG in Shiga #3 「はじめてのAutoML・BigQuery」](https://gcpug-shiga.connpass.com/event/276076/)"
structure: "[下書き](./slides/structures/2023-05-14_GCPUG_Shiga.qmd)"
event_name: "GCPUG in Shiga #3 「はじめてのAutoML・BigQuery」"
format:
  revealjs:
    theme: simple
    slide-level: 2
    template-partials:
      - _custom_templates/title-slide.html
    # logo:
    # footer: "フッターテキスト<br/>改行もできる"
    menu: false
    slide-number: c/t
    show-slide-number: speaker
    # show-slide-number: print
    # show-notes: true
    # show-notes: separate-page
    # pdf-separate-fragments: true
    preview-links: false
    # slide-tone: true
    progress: false
    history: false
    hash-type: number
    # chalkboard:
    #   buttons: false
    #   src: <file>
    # transition: convex
    # transition-speed: default
    # navigation-mode: vertical
    # controls-layout: bottom-right
    # controls-back-arrows: visible
    # controls-tutorial: true
    css: _custom_scss/style.scss
#   pptx:
#     slide-level: 2
    
---
```{python}
import internal_module.internal as itn

duration = 0
```

# はじめに

## 自己紹介 {.smaller}

:::: {.columns}

::: {.column width="40%"}

<img src="_images/profile_b_org_01.png" />
<img src="https://api.accredible.com/v1/frontend/credential_website_embed_image/badge/62647313" />
<img src="https://api.accredible.com/v1/frontend/credential_website_embed_image/badge/70175632" />

:::

::: {.column width="60%"}
- 名前 : 太田 有人
- 所属 : フェンリル株式会社 クラウド事業推進部
- 出身 : 1987/7/1 に京都で生まれる
- コンビニバイト10年の後にIT業界に飛び込む（現在7年目）
- システムエンジニア（2017～2021）<br>↓<br>クラウドエンジニア（2022～現在）
- [LinkedIn](https://www.linkedin.com/in/ba4585199)
- [Twitter (別名で活動中)](https://twitter.com/nazonoobasan407)
:::

::::

::: {.notes}
まずは、私について軽く自己紹介させてください。


```{python}
#| output: asis

# 時間設定
duration = duration + 60

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## ご注意とお詫び

::: {.notes}

- AutoML Tables は非推奨となり、2024 年 1 月 23 日以降は Google Cloud で使用できなくなります。
- 本発表内容は Vertex AI / 表形式のデータ / AutoML を使うことを前提として構成しています


```{python}
#| output: asis

# 時間設定
duration = duration + 30

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

# ところで……

::: {.notes}


```{python}
#| output: asis

# 時間設定
duration = duration + 5

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## 最近は、魔法使いの修行が流行っている？

::: {.notes}

- AI (ChatGPTとか) に呪文をかけて、望みの文章を生み出す
- AI (Stable Diffusionとか) に呪文をかけて、望みの画像を生み出す
- AI (MusicLMとか) に呪文をかけて、望みの音楽を生み出す

　→よりよい呪文を作ったり、よりよい AI と呪文の組み合わせの研究に励む人々がたくさん！


```{python}
#| output: asis

# 時間設定
duration = duration + 60

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## 「呪文」をかける対象の AI を育てる

::: {.notes}

- まずは呪文をかける対象の AI を育てる必要がある
- データをたくさん AI に与えることで、成長する
  - これが世にいう「学習」と呼ばれるプロセス
- 成長した AI に呪文をかけて、望みの結果を生み出す

```{python}
#| output: asis

# 時間設定
duration = duration + 60

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## そうは言ってもね……

- 「呪文」を作るのはできそうだけど、AI を成長させる方法はわからない……
- 今から AI の仕組みを勉強するのは大変だ……
- 本当に役にたつものが生み出せるのかわからない……

→AI を自動で成長させてくれる AutoML を使って、Excel データで育て始めてみませんか？

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 30

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

# Vertex AI / 表形式のデータ でできること

- AI に与えるデータ自体を管理できる
- AI に与えるデータを指定すれば、自動で AI を育ててくれる (AutoML)
- AI の成長状態を記録・管理できる
- 育てた AI に呪文をかけて、何かを生み出すことができる
  - 表形式データの場合は、予測値（単体値・連続値）もしくは分類の予測結果を生み出す

::: {.notes}

- AI に与えるデータ自体を管理できる
- AI に与えるデータを指定すれば、自動で AI を育ててくれる (AutoML)
- AI の成長状態を記録・管理できる
- 育てた AI に呪文をかけて、何かを生み出すことができる
  - 表形式データの場合は、予測値（単体値・連続値）もしくは分類の予測結果を生み出す

```{python}
#| output: asis

# 時間設定
duration = duration + 30

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## AI に与えるデータ自体を管理できる

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 30

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## 自動で AI を育ててくれる (AutoML)

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 30

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## AI の成長状態を記録・管理できる

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 30

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## 育てた AI に呪文をかけて、何かを生み出すことができる

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 30

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->


# 呪文をかけて何かを生み出すまでの道のり

1. 何を生み出したいか、目的を定義する
2. AI を育てるためのデータを収集する
3. AI を育てるためのデータを準備する
4. 学習をさせて AI を育てる
5. 育てた AI に呪文をかけて何かを生み出す

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 35

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## 1. 何を生み出したいか、目的を定義する

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 35

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## 2. AI を育てるためのデータを収集する

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 35

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## 3. AI を育てるためのデータを準備する

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 35

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## 4. 学習をさせて AI を育てる

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 35

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

## 5. 育てた AI に呪文をかけて何かを生み出す

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 35

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

# Excel データで始めてみませんか？

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 30

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

# 宣伝

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 30

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

# ご清聴ありがとうございました

::: {.notes}

```{python}
#| output: asis

# 時間設定
duration = duration + 5

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->

# Appendix

## 料金について

::: {.notes}

- 料金
  - 学習 : 1時間で 2300円ほど

```{python}
#| output: asis

# 時間設定
duration = duration + 30

print(f'**ここまでで {itn.str_time(duration)}**')
```
:::

<!-- --------------------------------------------------------------------- -->
<!-- --------------------------------------------------------------------- -->
